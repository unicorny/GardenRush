material highlightGridCellIso
{
	technique emptyCell
	{
		pass 0
		{
			shader 
			{
				vertexShader = shaders/default_sprite.vert
				fragmentShader = shaders/highlightGridCellIso.frag
				
				border_color    = 0.5,0.5,0.5,0.5
				border_size 	= 50
				highlight_color = 1.0,1.0,0.0
				
			}
		}
	}
	
	technique positiveNeighbor
	{
		pass 0
		{
			shader 
			{
				vertexShader = shaders/default_sprite.vert
				fragmentShader = shaders/highlightGridCellIso.frag
				
				border_color    = 0.0,1.0,0.0,1.0
				border_size 	= 16
				highlight_color = 1.0,1.0,0.0
				
			}
		}
	}
	
	technique negativeNeighbor
	{
		pass 0
		{
			shader 
			{
				vertexShader = shaders/default_sprite.vert
				fragmentShader = shaders/highlightGridCellIso.frag
				
				border_color    = 1.0,0.0,0.0,1.0
				border_size 	= 16
				highlight_color = 1.0,1.0,0.0
				
			}
		}
	}
	
	technique reallyGoodNeighbor
	{
		pass 0
		{
			shader 
			{
				vertexShader = shaders/default_sprite.vert
				fragmentShader = shaders/highlightGridCellIso.frag
				
				border_color    = 0.4,1.0,0.4,1.0
				border_size 	= 16
				highlight_color = 1.0,1.0,0.0
				
			}
		}
	}
	technique neutralNeighbor
	{
		pass 0
		{
			shader 
			{
				vertexShader = shaders/default_sprite.vert
				fragmentShader = shaders/highlightGridCellIso.frag
				
				border_color    = 1.0,1.0,1.0,1.0
				border_size 	= 16
				highlight_color = 0.0,0.5,0.0
				
			}
		}
	}
	
	technique selectedCell
	{
		pass 0
		{
			shader 
			{
				vertexShader = shaders/default_sprite.vert
				fragmentShader = shaders/highlightGridCellIso.frag
				
				border_color    = 1.0,1.0,1.0,1.0
				border_size 	= 16
				highlight_color = 1.0,1.0,0.0
				
			}
		}
	}
	
	technique errorCell
	{
		pass 0
		{
			shader 
			{
				vertexShader = shaders/default_sprite.vert
				fragmentShader = shaders/highlightGridCellIso.frag
				
				border_color    = 1.0,0.0,0.0,1.0
				border_size 	= 12
				highlight_color = 1.0,1.0,0.0
				
			}

		}
	}
	
}